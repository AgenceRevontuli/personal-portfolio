webpackHotUpdate("personal-portfolio",{

/***/ "./packages/mars-theme/src/components/templates/About.js":
/*!***************************************************************!*\
  !*** ./packages/mars-theme/src/components/templates/About.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../link */ \"./packages/mars-theme/src/components/link.js\");\n/* harmony import */ var _frontity_components_iframe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @frontity/components/iframe */ \"./node_modules/@frontity/components/iframe.tsx\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}const About=({state})=>{const data=state.source.get(state.router.link);const page=state.source[data.type][data.id];console.log(page);return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(Section,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(Row,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(PhotoProfil,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(OnImage,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h2\",{children:\"Tristan TORNATORE \\uD83E\\uDD8A\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{children:\"tristan@revontuli.fr\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{link:page.acf.linkedin,target:\"_blank\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(\"svg\",{fill:\"#000000\",xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 50 50\",width:\"30px\",height:\"30px\",children:[\"    \",Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"path\",{d:\"M41,4H9C6.24,4,4,6.24,4,9v32c0,2.76,2.24,5,5,5h32c2.76,0,5-2.24,5-5V9C46,6.24,43.76,4,41,4z M17,20v19h-6V20H17z M11,14.47c0-1.4,1.2-2.47,3-2.47s2.93,1.07,3,2.47c0,1.4-1.12,2.53-3,2.53C12.2,17,11,15.87,11,14.47z M39,39h-6c0,0,0-9.26,0-10 c0-2-1-4-3.5-4.04h-0.08C27,24.96,26,27.02,26,29c0,0.91,0,10,0,10h-6V20h6v2.56c0,0,1.93-2.56,5.81-2.56 c3.97,0,7.19,2.73,7.19,8.26V39z\"})]})})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"img\",{src:page.acf.photoProfil.url,alt:page.acf.photoProfil.alt})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(\"div\",{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{children:\"Freelance d\\xE9veloppeur web et strat\\xE9gie d'acquisition\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{children:\"Depuis 6 ans, je me passionne pour l'exp\\xE9rience utilisateur, le d\\xE9veloppement de site web front-end et le tracking de Data sur les sites internet.\"})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(Article,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h2\",{children:\"Mon parcours et mes exp\\xE9riences\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(ArticleContent,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(\"div\",{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h3\",{children:\"2022 : Je me consacre de nouveau \\xE0 mon activit\\xE9 de Freelance \\xE0 100%\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{children:\"Durant la pand\\xE9mie de Covid, la baisse d'activit\\xE9 de l'accompagnement de Startups me permets de me recentrer sur mon activit\\xE9 de d\\xE9veloppeur web et de freelance en acquisition de trafic pour mes clients. J'en profite pour revenir dans ma Normandie natale.\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h3\",{children:\"2020 : Je rejoins Station F pour lancer le programme Google for Startups en France\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{children:\"Google me propose une mission longue dur\\xE9e de 2 ans \\xE0 Paris, \\xE0 Station F pour d\\xE9velopper le programme Google for Startups France. Pendant 2 ans, j'ai eu l'opportunit\\xE9 d'accompagner plus de 2 000 startups dans l'\\xE9laboration de leur strat\\xE9gie d'acquisition et de tracking Data.\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h3\",{children:\"2018 : J'interviens en tant que Coach pour Google Ateliers Num\\xE9riques\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{children:\"J'ai l'opportunit\\xE9 de rejoindre les Ateliers Num\\xE9riques de Google pour qui je me d\\xE9place partout sur le territoire Fran\\xE7ais pour intervenir et accompagner les entreprises lors de conf\\xE9rences organis\\xE9es par les CCI. Puis je m'installe \\xE0 Rennes, o\\xF9 \\xE0 c\\xF4t\\xE9 de mon activit\\xE9 de Freelance, j'interviens \\xE0 l'atelier Google pr\\xE9sent sur place.\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h3\",{children:\"2016 : Lancement de mon activit\\xE9 de Freelance en qualit\\xE9 de d\\xE9veloppeur web \\xE0 100%\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{children:\"C'est en 2016 apr\\xE8s 4 ans en entreprise et un master en strat\\xE9gie digitale en poche que je lance mon activit\\xE9 de Freelance pour accompagner mes clients dans le d\\xE9veloppement de leur site internet. En parall\\xE8le j'en profite pour lancer ma premi\\xE8re Startup : Trouve Ton Mojo.\"})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(Competences,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"D\\xE9veloppeur Front-End\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Cr\\xE9ation de site Wordpress\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"ReactJS\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Javascript\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Prototype\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Maquettage Figma\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"UX Design\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"UI Design\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Google Tag Manager\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Google Analytics 4\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Matomo\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Airtable\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Zapier\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Notion\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Je fais aussi le caf\\xE9 \\u2615\\uFE0F\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"Google Ads\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h4\",{children:\"R\\xE9f\\xE9rencement naturel - SEO\"})]})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(Article,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h2\",{children:\"Ma Playlist Spotify\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(ArticleContent,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(\"div\",{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h3\",{children:\"Ma playlist pour d\\xE9velopper des sites web\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{children:\"Est-ce que ce n'est pas la meilleure fa\\xE7on de d\\xE9couvrir un profil que de conna\\xEEtre ses go\\xFBts musicaux ?\"})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_frontity_components_iframe__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{src:\"https://open.spotify.com/embed/playlist/3b6yCJ30ZZoknaadcCMDd0?utm_source=generator&theme=0\",Title:\"Spotify\",Height:\"80\",Width:\"100%\",className:\"Spotify\",frameBorder:\"0\",allow:\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"})})]})]})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(About));const Section=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e486f9g6\",label:\"Section\"})( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");const Row=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e486f9g5\",label:\"Row\"})( false?undefined:{name:\"1h7auow\",styles:\"padding:150px 20%;display:flex;gap:80px;justify-content:center;align-items:center;h1{font-size:4.8em;}p{font-size:1.5em;line-height:2em;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pcm9ubWFjL0RvY3VtZW50cy8xX0RldmxvcHAvcGVyc29uYWwtcG9ydGZvbGlvL3BhY2thZ2VzL21hcnMtdGhlbWUvc3JjL2NvbXBvbmVudHMvdGVtcGxhdGVzL0Fib3V0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZGc0IiLCJmaWxlIjoiL1VzZXJzL2lyb25tYWMvRG9jdW1lbnRzLzFfRGV2bG9wcC9wZXJzb25hbC1wb3J0Zm9saW8vcGFja2FnZXMvbWFycy10aGVtZS9zcmMvY29tcG9uZW50cy90ZW1wbGF0ZXMvQWJvdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCwgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgTGluayBmcm9tIFwiLi4vbGlua1wiO1xuaW1wb3J0IElmcmFtZSBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvaWZyYW1lXCI7XG5cblxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XG4gICAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspXG4gICAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdXG5cbiAgICBjb25zb2xlLmxvZyhwYWdlKTtcblxuICAgIHJldHVybihcbiAgICAgICAgPFNlY3Rpb24+XG4gICAgICAgICAgIDxSb3c+XG4gICAgICAgICAgICAgICAgPFBob3RvUHJvZmlsPlxuICAgICAgICAgICAgICAgICAgICA8T25JbWFnZT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMj5UcmlzdGFuIFRPUk5BVE9SRSDwn6aKPC9oMj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPnRyaXN0YW5AcmV2b250dWxpLmZyPC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgbGluaz17cGFnZS5hY2YubGlua2VkaW59IHRhcmdldD1cIl9ibGFua1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgZmlsbD1cIiMwMDAwMDBcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCA1MCA1MFwiIHdpZHRoPVwiMzBweFwiIGhlaWdodD1cIjMwcHhcIj4gICAgPHBhdGggZD1cIk00MSw0SDlDNi4yNCw0LDQsNi4yNCw0LDl2MzJjMCwyLjc2LDIuMjQsNSw1LDVoMzJjMi43NiwwLDUtMi4yNCw1LTVWOUM0Niw2LjI0LDQzLjc2LDQsNDEsNHogTTE3LDIwdjE5aC02VjIwSDE3eiBNMTEsMTQuNDdjMC0xLjQsMS4yLTIuNDcsMy0yLjQ3czIuOTMsMS4wNywzLDIuNDdjMCwxLjQtMS4xMiwyLjUzLTMsMi41M0MxMi4yLDE3LDExLDE1Ljg3LDExLDE0LjQ3eiBNMzksMzloLTZjMCwwLDAtOS4yNiwwLTEwIGMwLTItMS00LTMuNS00LjA0aC0wLjA4QzI3LDI0Ljk2LDI2LDI3LjAyLDI2LDI5YzAsMC45MSwwLDEwLDAsMTBoLTZWMjBoNnYyLjU2YzAsMCwxLjkzLTIuNTYsNS44MS0yLjU2IGMzLjk3LDAsNy4xOSwyLjczLDcuMTksOC4yNlYzOXpcIi8+PC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgIDwvT25JbWFnZT5cbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3BhZ2UuYWNmLnBob3RvUHJvZmlsLnVybH0gYWx0PXtwYWdlLmFjZi5waG90b1Byb2ZpbC5hbHR9IC8+XG4gICAgICAgICAgICAgICAgPC9QaG90b1Byb2ZpbD5cbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICA8aDE+RnJlZWxhbmNlIGTDqXZlbG9wcGV1ciB3ZWIgZXQgc3RyYXTDqWdpZSBkJ2FjcXVpc2l0aW9uPC9oMT5cbiAgICAgICAgICAgICAgICAgICAgPHA+RGVwdWlzIDYgYW5zLCBqZSBtZSBwYXNzaW9ubmUgcG91ciBsJ2V4cMOpcmllbmNlIHV0aWxpc2F0ZXVyLCBsZSBkw6l2ZWxvcHBlbWVudCBkZSBzaXRlIHdlYiBmcm9udC1lbmQgZXQgbGUgdHJhY2tpbmcgZGUgRGF0YSBzdXIgbGVzIHNpdGVzIGludGVybmV0LjwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgPC9Sb3c+XG4gICAgICAgICAgIDxBcnRpY2xlPlxuICAgICAgICAgICAgICAgIDxoMj5Nb24gcGFyY291cnMgZXQgbWVzIGV4cMOpcmllbmNlczwvaDI+XG4gICAgICAgICAgICAgICAgPEFydGljbGVDb250ZW50PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPjIwMjIgOiBKZSBtZSBjb25zYWNyZSBkZSBub3V2ZWF1IMOgIG1vbiBhY3Rpdml0w6kgZGUgRnJlZWxhbmNlIMOgIDEwMCU8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHA+RHVyYW50IGxhIHBhbmTDqW1pZSBkZSBDb3ZpZCwgbGEgYmFpc3NlIGQnYWN0aXZpdMOpIGRlIGwnYWNjb21wYWduZW1lbnQgZGUgU3RhcnR1cHMgbWUgcGVybWV0cyBkZSBtZSByZWNlbnRyZXIgc3VyIG1vbiBhY3Rpdml0w6kgZGUgZMOpdmVsb3BwZXVyIHdlYiBldCBkZSBmcmVlbGFuY2UgZW4gYWNxdWlzaXRpb24gZGUgdHJhZmljIHBvdXIgbWVzIGNsaWVudHMuIEonZW4gcHJvZml0ZSBwb3VyIHJldmVuaXIgZGFucyBtYSBOb3JtYW5kaWUgbmF0YWxlLjwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4yMDIwIDogSmUgcmVqb2lucyBTdGF0aW9uIEYgcG91ciBsYW5jZXIgbGUgcHJvZ3JhbW1lIEdvb2dsZSBmb3IgU3RhcnR1cHMgZW4gRnJhbmNlPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPkdvb2dsZSBtZSBwcm9wb3NlIHVuZSBtaXNzaW9uIGxvbmd1ZSBkdXLDqWUgZGUgMiBhbnMgw6AgUGFyaXMsIMOgIFN0YXRpb24gRiBwb3VyIGTDqXZlbG9wcGVyIGxlIHByb2dyYW1tZSBHb29nbGUgZm9yIFN0YXJ0dXBzIEZyYW5jZS4gUGVuZGFudCAyIGFucywgaidhaSBldSBsJ29wcG9ydHVuaXTDqSBkJ2FjY29tcGFnbmVyIHBsdXMgZGUgMiAwMDAgc3RhcnR1cHMgZGFucyBsJ8OpbGFib3JhdGlvbiBkZSBsZXVyIHN0cmF0w6lnaWUgZCdhY3F1aXNpdGlvbiBldCBkZSB0cmFja2luZyBEYXRhLjwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4yMDE4IDogSidpbnRlcnZpZW5zIGVuIHRhbnQgcXVlIENvYWNoIHBvdXIgR29vZ2xlIEF0ZWxpZXJzIE51bcOpcmlxdWVzPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwPkonYWkgbCdvcHBvcnR1bml0w6kgZGUgcmVqb2luZHJlIGxlcyBBdGVsaWVycyBOdW3DqXJpcXVlcyBkZSBHb29nbGUgcG91ciBxdWkgamUgbWUgZMOpcGxhY2UgcGFydG91dCBzdXIgbGUgdGVycml0b2lyZSBGcmFuw6dhaXMgcG91ciBpbnRlcnZlbmlyIGV0IGFjY29tcGFnbmVyIGxlcyBlbnRyZXByaXNlcyBsb3JzIGRlIGNvbmbDqXJlbmNlcyBvcmdhbmlzw6llcyBwYXIgbGVzIENDSS4gUHVpcyBqZSBtJ2luc3RhbGxlIMOgIFJlbm5lcywgb8O5IMOgIGPDtHTDqSBkZSBtb24gYWN0aXZpdMOpIGRlIEZyZWVsYW5jZSwgaidpbnRlcnZpZW5zIMOgIGwnYXRlbGllciBHb29nbGUgcHLDqXNlbnQgc3VyIHBsYWNlLjwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4yMDE2IDogTGFuY2VtZW50IGRlIG1vbiBhY3Rpdml0w6kgZGUgRnJlZWxhbmNlIGVuIHF1YWxpdMOpIGRlIGTDqXZlbG9wcGV1ciB3ZWIgw6AgMTAwJTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cD5DJ2VzdCBlbiAyMDE2IGFwcsOocyA0IGFucyBlbiBlbnRyZXByaXNlIGV0IHVuIG1hc3RlciBlbiBzdHJhdMOpZ2llIGRpZ2l0YWxlIGVuIHBvY2hlIHF1ZSBqZSBsYW5jZSBtb24gYWN0aXZpdMOpIGRlIEZyZWVsYW5jZSBwb3VyIGFjY29tcGFnbmVyIG1lcyBjbGllbnRzIGRhbnMgbGUgZMOpdmVsb3BwZW1lbnQgZGUgbGV1ciBzaXRlIGludGVybmV0LiBFbiBwYXJhbGzDqGxlIGonZW4gcHJvZml0ZSBwb3VyIGxhbmNlciBtYSBwcmVtacOocmUgU3RhcnR1cCA6IFRyb3V2ZSBUb24gTW9qby48L3A+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8Q29tcGV0ZW5jZXM+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDQ+RMOpdmVsb3BwZXVyIEZyb250LUVuZDwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDQ+Q3LDqWF0aW9uIGRlIHNpdGUgV29yZHByZXNzPC9oND5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoND5SZWFjdEpTPC9oND5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoND5KYXZhc2NyaXB0PC9oND5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoND5Qcm90b3R5cGU8L2g0PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGg0Pk1hcXVldHRhZ2UgRmlnbWE8L2g0PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGg0PlVYIERlc2lnbjwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDQ+VUkgRGVzaWduPC9oND5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoND5Hb29nbGUgVGFnIE1hbmFnZXI8L2g0PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGg0Pkdvb2dsZSBBbmFseXRpY3MgNDwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDQ+TWF0b21vPC9oND5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoND5BaXJ0YWJsZTwvaDQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aDQ+WmFwaWVyPC9oND5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoND5Ob3Rpb248L2g0PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGg0PkplIGZhaXMgYXVzc2kgbGUgY2Fmw6kg4piV77iPPC9oND5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoND5Hb29nbGUgQWRzPC9oND5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoND5Sw6lmw6lyZW5jZW1lbnQgbmF0dXJlbCAtIFNFTzwvaDQ+XG4gICAgICAgICAgICAgICAgICAgIDwvQ29tcGV0ZW5jZXM+XG4gICAgICAgICAgICAgICAgPC9BcnRpY2xlQ29udGVudD5cbiAgICAgICAgICAgPC9BcnRpY2xlPlxuICAgICAgICAgICA8QXJ0aWNsZT5cbiAgICAgICAgICAgICAgICA8aDI+TWEgUGxheWxpc3QgU3BvdGlmeTwvaDI+XG4gICAgICAgICAgICAgICAgPEFydGljbGVDb250ZW50PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPk1hIHBsYXlsaXN0IHBvdXIgZMOpdmVsb3BwZXIgZGVzIHNpdGVzIHdlYjwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cD5Fc3QtY2UgcXVlIGNlIG4nZXN0IHBhcyBsYSBtZWlsbGV1cmUgZmHDp29uIGRlIGTDqWNvdXZyaXIgdW4gcHJvZmlsIHF1ZSBkZSBjb25uYcOudHJlIHNlcyBnb8O7dHMgbXVzaWNhdXggPzwvcD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SWZyYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly9vcGVuLnNwb3RpZnkuY29tL2VtYmVkL3BsYXlsaXN0LzNiNnlDSjMwWlpva25hYWRjQ01EZDA/dXRtX3NvdXJjZT1nZW5lcmF0b3ImdGhlbWU9MFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVGl0bGU9XCJTcG90aWZ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZWlnaHQ9XCI4MFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgV2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJTcG90aWZ5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcmFtZUJvcmRlcj1cIjBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93PVwiYXV0b3BsYXk7IGNsaXBib2FyZC13cml0ZTsgZW5jcnlwdGVkLW1lZGlhOyBmdWxsc2NyZWVuOyBwaWN0dXJlLWluLXBpY3R1cmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9BcnRpY2xlQ29udGVudD5cbiAgICAgICAgICAgPC9BcnRpY2xlPlxuICAgICAgICA8L1NlY3Rpb24+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcblxuY29uc3QgU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG5gO1xuXG5jb25zdCBSb3cgPSBzdHlsZWQuZGl2YFxuICAgIHBhZGRpbmc6IDE1MHB4IDIwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogODBweDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOiA0LjhlbTtcbiAgICB9XG4gICAgcCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyZW07XG4gICAgfVxuYDtcblxuY29uc3QgUGhvdG9Qcm9maWwgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogNDAlO1xuICAgIGltZyB7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMzNDNCNEU7XG4gICAgICAgIGJveC1zaGFkb3c6IC00cHggNHB4IDBweCAjMzQzQjRFO1xuICAgIH1cbmA7XG5cbmNvbnN0IE9uSW1hZ2UgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBtYXJnaW46IDIwcHg7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDIwNSwgMjA1LCAyMDUsIDAuNjUpO1xuICAgIGJveC1zaGFkb3c6IDAgNHB4IDMwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cigzLjZweCk7XG4gICAgLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTAuNnB4KTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBwIHtcbiAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyZW07XG4gICAgfVxuICAgIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiAyZW07XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICB9XG4gICAgc3ZnIHtcbiAgICAgICAgZmlsbDogI2ZmZjtcbiAgICB9XG5gO1xuXG5jb25zdCBBcnRpY2xlID0gc3R5bGVkLmRpdmBcbiAgICBwYWRkaW5nOiA0MHB4IDIwJSAxNTBweCAyMCU7XG4gICAgaDIge1xuICAgICAgICBmb250LXNpemU6IDRlbTtcbiAgICB9XG5gXG5cblxuY29uc3QgQXJ0aWNsZUNvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDE1MHB4O1xuICAgIGgzIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNWVtO1xuICAgIH1cbiAgICBwIHtcbiAgICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyZW07XG4gICAgfVxuICAgIGRpdiB7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgfVxuYFxuXG5jb25zdCBDb21wZXRlbmNlcyA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGdhcDogMzBweDtcbiAgICBoNCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgbWluLXdpZHRoOiAxMDBweDtcbiAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzM0M0I0RTtcbiAgICAgICAgYm94LXNoYWRvdzogLTRweCA0cHggMHB4ICMzNDNCNEU7XG4gICAgfVxuYCJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PhotoProfil=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e486f9g4\",label:\"PhotoProfil\"})( false?undefined:{name:\"1ciyt7v\",styles:\"position:relative;width:40%;img{border:1px solid #343B4E;box-shadow:-4px 4px 0px #343B4E;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const OnImage=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e486f9g3\",label:\"OnImage\"})( false?undefined:{name:\"bgoug7\",styles:\"position:absolute;bottom:0;left:0;right:0;margin:20px;padding:20px;background:rgba(205, 205, 205, 0.65);box-shadow:0 4px 30px rgba(0, 0, 0, 0.1);backdrop-filter:blur(3.6px);-webkit-backdrop-filter:blur(10.6px);color:#fff;p{font-size:1em;line-height:2em;}h2{font-size:2em;margin:0;}svg{fill:#fff;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Article=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e486f9g2\",label:\"Article\"})( false?undefined:{name:\"14yqqbs\",styles:\"padding:40px 20% 150px 20%;h2{font-size:4em;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const ArticleContent=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e486f9g1\",label:\"ArticleContent\"})( false?undefined:{name:\"11yt3gz\",styles:\"display:flex;justify-content:center;align-items:center;gap:150px;h3{font-size:1.5em;line-height:1.5em;}p{font-size:1em;line-height:2em;}div{width:50%;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Competences=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e486f9g0\",label:\"Competences\"})( false?undefined:{name:\"11cg2cb\",styles:\"display:inline-flex;flex-wrap:wrap;gap:30px;h4{display:block;margin:0;text-align:center;min-width:100px;padding:20px;border:1px solid #343B4E;box-shadow:-4px 4px 0px #343B4E;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/templates/About.js\n");

/***/ })

})